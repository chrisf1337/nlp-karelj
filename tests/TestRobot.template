// -*- mode: java; -*-

import kareltherobot.*;
import static kareltherobot.Directions.*;
import java.nio.file.*;
import java.lang.reflect.*;
import java.io.*;
import java.lang.*;

public class TestRobot{{ test_number }} extends Robot {
    public TestRobot{{ test_number }}(int street, int avenue, Direction direction, int beepers) {
        super(street, avenue, direction, beepers);
    }

    public void move(int steps) {
        for (int i = 0; i < steps; i++) {
            super.move();
        }
    }

    public void turnLeft(int times) {
        for (int i = 0; i < times; i++) {
            super.turnLeft();
        }
    }

    public static void main(String args[]) {
        TestRobot{{ test_number }} karel = new TestRobot{{ test_number }}(2, 2, East, 0);
        Field locField = null;
        Field dirField = null;
        try {
            locField = karel.getClass().getSuperclass().getSuperclass().getDeclaredField("loc");
            dirField = karel.getClass().getSuperclass().getSuperclass().getDeclaredField("direction");
        } catch (NoSuchFieldException e) {
            System.out.println(e.getMessage());
            System.exit(1);
        }
        locField.setAccessible(true);
        dirField.setAccessible(true);

        // ===== Begin injected code =====
        {{ code }}
        // ===== End injected code =====

        karel.showState("");
        World.saveWorld("end-{{ test_number }}-test.kwld");
        int[] loc = {0, 0, 0, 0};
        Direction dir = null;
        try {
            loc = (int [])locField.get(karel);
            dir = (Direction)dirField.get(karel);
        } catch (IllegalAccessException e) {
            System.out.println(e.getMessage());
            System.exit(1);
        }

        try {
            Files.write(Paths.get("end-{{ test_number }}-test.kwld"),
                String.format("robot %d %d %s\n", loc[3], loc[0], dir).getBytes(),
                StandardOpenOption.APPEND);
        } catch (IOException e) {
            System.out.println(e.getMessage());
            System.exit(1);
        }
    }

    static {
        World.reset();
        World.readWorld("start-{{ test_number }}.kwld");
        World.setDelay(0);
        World.setVisible(false);
    }
}
